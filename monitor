import psutil
import time


def monitor_processes(processes):
    """Monitor CPU and memory usage of a list of processes."""
    try:
        while True:
            total_memory = 0
            total_cpu = 0

            for process in processes:
                total_memory += process.memory_info().rss / (1024 * 1024)  # Convert to MB
                total_cpu += process.cpu_percent(interval=1)

            print(f"Total Memory Usage: {total_memory:.2f} MB")
            print(f"Total CPU Usage: {total_cpu:.2f}%")
            print("-" * 30)

            time.sleep(2)
    except psutil.NoSuchProcess:
        print("One of the processes terminated.")
    except KeyboardInterrupt:
        print("Monitoring stopped.")


def main():
    process_name = "ScreenshotTool"  # Replace with your actual process name

    processes = [proc for proc in psutil.process_iter(['pid', 'name']) if proc.info['name'] == process_name]

    if processes:
        print(f"Monitoring {len(processes)} processes with the name '{process_name}':")
        monitor_processes(processes)
    else:
        print(f"No processes found with the name '{process_name}'.")


if __name__ == "__main__":
    main()
